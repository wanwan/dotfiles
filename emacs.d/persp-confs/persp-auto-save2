;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil
   ((def-buffer "init.el" "/home/waka/dotfiles/emacs.d/init.el" emacs-lisp-mode)
    (def-buffer "howm-20171225.652<emacs.d>" "~/dotfiles/emacs.d/elpa/howm-20171225.652/" dired-mode)
    (def-buffer "diff" "~/works/study/osaskbook/day25/harib22f/orig/diff/" dired-mode)
    (def-buffer "orig" "~/works/study/osaskbook/day25/harib22f/orig/" dired-mode)
    (def-buffer "harib22f" "~/works/study/osaskbook/day25/harib22f/" dired-mode)
    (def-buffer "day25" "~/works/study/osaskbook/day25/" dired-mode)
    (def-buffer "osaskbook" "~/works/study/osaskbook/" dired-mode)
    (def-buffer "study" "~/works/study/" dired-mode)
    (def-buffer "works" "~/works/" dired-mode)
    (def-buffer "dotfiles" "~/dotfiles/" dired-mode)
    (def-buffer "make_effector.sh<filters>" nil sh-mode)
    (def-buffer "F2i.cc<filters>" nil c++-mode)
    (def-buffer "F2i.diff" nil diff-mode)
    (def-buffer "F2i.h.diff" nil diff-mode)
    (def-buffer "F2i.h<filters>" nil c++-mode)
    (def-buffer "F2i.h<stationary>" nil c++-mode)
    (def-buffer "ChCombiner.h" nil c-mode)
    (def-buffer "AutoWah.h" nil c-mode)
    (def-buffer "AavMaxMc.h" nil c-mode)
    (def-buffer "AavMax.h" nil c-mode)
    (def-buffer "AVO.h" nil c-mode)
    (def-buffer "AECVA.h" nil c-mode)
    (def-buffer "AEC.h" nil c-mode)
    (def-buffer "F2i.cc<stationary>" nil c++-mode)
    (def-buffer "effector.csv" nil csv-mode)
    (def-buffer "make_effector.sh<stationary>" nil sh-mode)
    (def-buffer "howm-20171225.652<.emacs.d>" "~/.emacs.d/elpa/howm-20171225.652/" dired-mode)
    (def-buffer "elpa<.emacs.d>" "~/.emacs.d/elpa/" dired-mode)
    (def-buffer ".emacs.d" "~/.emacs.d/" dired-mode)
    (def-buffer "elisp" "~/.emacs.d/elisp/" dired-mode)
    (def-buffer "elpa<emacs.d>" "~/dotfiles/emacs.d/elpa/" dired-mode)
    (def-buffer "archives" "~/.emacs.d/elpa/archives/" dired-mode)
    (def-buffer "emacs.d" "~/dotfiles/emacs.d/" dired-mode))
   (def-wconf
     (((min-height . 4)
       (min-width . 10)
       (min-height-ignore . 2)
       (min-width-ignore . 4)
       (min-height-safe . 1)
       (min-width-safe . 2)
       (min-pixel-height . 84)
       (min-pixel-width . 100)
       (min-pixel-height-ignore . 42)
       (min-pixel-width-ignore . 40)
       (min-pixel-height-safe . 21)
       (min-pixel-width-safe . 20))
      leaf
      (pixel-width . 2556)
      (pixel-height . 1415)
      (total-width . 255)
      (total-height . 67)
      (normal-height . 1.0)
      (normal-width . 1.0)
      (buffer "*init log*"
	      (selected . t)
	      (hscroll . 0)
	      (fringes 8 8 nil)
	      (margins nil)
	      (scroll-bars nil 0 t nil 0 t)
	      (vscroll . 0)
	      (dedicated)
	      (point . 1)
	      (start . 1))))
   (def-params nil)
   t nil nil)
 (def-persp "sony" nil
   (def-wconf
     (((min-height . 8)
       (min-width . 20)
       (min-height-ignore . 6)
       (min-width-ignore . 8)
       (min-height-safe . 2)
       (min-width-safe . 4)
       (min-pixel-height . 128)
       (min-pixel-width . 160)
       (min-pixel-height-ignore . 96)
       (min-pixel-width-ignore . 64)
       (min-pixel-height-safe . 32)
       (min-pixel-width-safe . 32))
      hc
      (pixel-width . 1916)
      (pixel-height . 1060)
      (total-width . 240)
      (total-height . 66)
      (normal-height . 1.0)
      (normal-width . 1.0)
      (combination-limit)
      (vc
       (pixel-width . 956)
       (pixel-height . 1060)
       (total-width . 120)
       (total-height . 66)
       (normal-height . 1.0)
       (normal-width . 0.4989561586638831)
       (combination-limit)
       (leaf
	(pixel-width . 956)
	(pixel-height . 528)
	(total-width . 120)
	(total-height . 33)
	(normal-height . 0.4981132075471698)
	(normal-width . 1.0)
	(buffer "F2i.diff"
		(selected)
		(hscroll . 0)
		(fringes 8 8 nil)
		(margins nil)
		(scroll-bars 0 0 nil nil)
		(vscroll . 0)
		(dedicated)
		(point . 257)
		(start . 1)))
       (leaf
	(last . t)
	(pixel-width . 956)
	(pixel-height . 532)
	(total-width . 120)
	(total-height . 33)
	(normal-height . 0.5018867924528302)
	(normal-width . 1.0)
	(buffer "F2i.cc<filters>"
		(selected)
		(hscroll . 0)
		(fringes 8 8 nil)
		(margins nil)
		(scroll-bars 0 0 t nil)
		(vscroll . 0)
		(dedicated)
		(point . 1)
		(start . 1))))
      (leaf
       (last . t)
       (pixel-width . 960)
       (pixel-height . 1060)
       (total-width . 120)
       (total-height . 66)
       (normal-height . 1.0)
       (normal-width . 0.5010438413361169)
       (buffer "make_effector.sh<filters>"
	       (selected . t)
	       (hscroll . 0)
	       (fringes 8 8 nil)
	       (margins nil)
	       (scroll-bars 0 0 nil nil)
	       (vscroll . 0)
	       (dedicated)
	       (point . 18505)
	       (start . 17108)))))
   (def-params nil)
   nil nil nil)
 (def-persp "howm"
   ((def-buffer "howm-view.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm-view.el" emacs-lisp-mode)
    (def-buffer "howm.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm.el" emacs-lisp-mode)
    (def-buffer "howm-mode.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm-mode.el" emacs-lisp-mode)
    (def-buffer "howm-common.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm-common.el" emacs-lisp-mode)
    (def-buffer "2016-11-01-000000.txt" "/home/waka/howm.git/2016/11/2016-11-01-000000.txt" text-mode)
    (def-buffer "howm-version.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm-version.el" emacs-lisp-mode)
    (def-buffer "action-lock.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/action-lock.el" emacs-lisp-mode))
   (def-wconf
     (((min-height . 4)
       (min-width . 10)
       (min-height-ignore . 2)
       (min-width-ignore . 4)
       (min-height-safe . 1)
       (min-width-safe . 2)
       (min-pixel-height . 84)
       (min-pixel-width . 100)
       (min-pixel-height-ignore . 42)
       (min-pixel-width-ignore . 40)
       (min-pixel-height-safe . 21)
       (min-pixel-width-safe . 20))
      leaf
      (pixel-width . 2554)
      (pixel-height . 1413)
      (total-width . 255)
      (total-height . 67)
      (normal-height . 1.0)
      (normal-width . 1.0)
      (buffer "action-lock.el"
	      (selected . t)
	      (hscroll . 0)
	      (fringes 8 8 nil)
	      (margins nil)
	      (scroll-bars nil 0 t nil 0 t)
	      (vscroll . 0)
	      (dedicated)
	      (point . 9911)
	      (start . 8738))))
   (def-params nil)
   nil nil nil)
 (def-persp "os" nil
   (def-wconf
     (((min-height . 8)
       (min-width . 20)
       (min-height-ignore . 4)
       (min-width-ignore . 8)
       (min-height-safe . 2)
       (min-width-safe . 4)
       (min-pixel-height . 168)
       (min-pixel-width . 200)
       (min-pixel-height-ignore . 84)
       (min-pixel-width-ignore . 80)
       (min-pixel-height-safe . 42)
       (min-pixel-width-safe . 40))
      hc
      (pixel-width . 2554)
      (pixel-height . 1413)
      (total-width . 255)
      (total-height . 67)
      (normal-height . 1.0)
      (normal-width . 1.0)
      (combination-limit)
      (leaf
       (pixel-width . 1274)
       (pixel-height . 1413)
       (total-width . 127)
       (total-height . 67)
       (normal-height . 1.0)
       (normal-width . 0.5)
       (buffer "harib22f"
	       (selected)
	       (hscroll . 0)
	       (fringes 8 8 nil)
	       (margins nil)
	       (scroll-bars nil 0 t nil 0 t)
	       (vscroll . 0)
	       (dedicated)
	       (point . 246)
	       (start . 1)))
      (vc
       (last . t)
       (pixel-width . 1280)
       (pixel-height . 1413)
       (total-width . 128)
       (total-height . 67)
       (normal-height . 1.0)
       (normal-width . 0.5)
       (combination-limit)
       (leaf
	(pixel-width . 1280)
	(pixel-height . 699)
	(total-width . 128)
	(total-height . 33)
	(normal-height . 0.5)
	(normal-width . 1.0)
	(buffer "diff"
		(selected . t)
		(hscroll . 0)
		(fringes 8 8 nil)
		(margins nil)
		(scroll-bars nil 0 t nil 0 t)
		(vscroll . 0)
		(dedicated)
		(point . 245)
		(start . 1)))
       (leaf
	(last . t)
	(pixel-width . 1280)
	(pixel-height . 714)
	(total-width . 128)
	(total-height . 34)
	(normal-height . 0.5)
	(normal-width . 1.0)
	(buffer "orig"
		(selected)
		(hscroll . 0)
		(fringes 8 8 nil)
		(margins nil)
		(scroll-bars nil 0 t nil 0 t)
		(vscroll . 0)
		(dedicated)
		(point . 244)
		(start . 1))))))
   (def-params nil)
   nil nil nil))
