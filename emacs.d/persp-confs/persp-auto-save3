;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil
((def-buffer "filterchainmgr" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filterchainmgr/" dired-mode)
(def-buffer "include<filterchainmgr>" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filterchainmgr/include/" dired-mode)
(def-buffer "pipeline" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/" dired-mode)
(def-buffer "filters<pipeline>" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/" dired-mode)
(def-buffer "DebugCapture" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/DebugCapture/" dired-mode)
(def-buffer "tools<filters>" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/tools/" dired-mode)
(def-buffer "ChNumAdjust" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/ChNumAdjust/" dired-mode)
(def-buffer "本文<n9975de 淡海乃海　水面が揺れる時>" "~/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/" dired-mode)
(def-buffer "init.el" "/home/waka/dotfiles/emacs.d/init.el" emacs-lisp-mode)
(def-buffer "n9354du 日本へようこそエルフさん。" "~/contents/narou/小説データ/小説家になろう/n9354du 日本へようこそエルフさん。/" dired-mode)
(def-buffer "本文<n9354du 日本へようこそエルフさん。>" "~/contents/narou/小説データ/小説家になろう/n9354du 日本へようこそエルフさん。/本文/" dired-mode)
(def-buffer "小説家になろう" "~/contents/narou/小説データ/小説家になろう/" dired-mode)
(def-buffer "n9975de 淡海乃海　水面が揺れる時" "~/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/" dired-mode)
(def-buffer "小説データ" "~/contents/narou/小説データ/" dired-mode)
(def-buffer "narou" "~/contents/narou/" dired-mode)
(def-buffer "contents" "~/contents/" dired-mode)
(def-buffer "study" "~/works/study/" dired-mode)
(def-buffer "src<soundpostcontrolservice>" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/" dired-mode)
(def-buffer "soundpostcontrolservice" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/" dired-mode)
(def-buffer "services" "~/workspace/hgrm/master/hagoromo/services/" dired-mode)
(def-buffer "F2i.diff" "/home/waka/workspace/hgrm/master/hagoromo/services/F2i.diff" diff-mode)
(def-buffer "F2i.cc<filters>" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/F2i/F2i.cc" c++-mode)
(def-buffer "make_effector.sh<stationary>" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/tools/make_effector.sh" sh-mode)
(def-buffer "howm-20171225.652<.emacs.d>" "~/.emacs.d/elpa/howm-20171225.652/" dired-mode)
(def-buffer "elpa<.emacs.d>" "~/.emacs.d/elpa/" dired-mode)
(def-buffer ".emacs.d" "~/.emacs.d/" dired-mode)
(def-buffer "elisp" "~/.emacs.d/elisp/" dired-mode)
(def-buffer "howm-20171225.652<emacs.d>" "~/dotfiles/emacs.d/elpa/howm-20171225.652/" dired-mode)
(def-buffer "elpa<emacs.d>" "~/dotfiles/emacs.d/elpa/" dired-mode)
(def-buffer "emacs.d" "~/dotfiles/emacs.d/" dired-mode)
(def-buffer "F2i" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/F2i/" dired-mode)
(def-buffer "F2i.h.diff" "/home/waka/workspace/hgrm/master/hagoromo/services/F2i.h.diff" diff-mode)
(def-buffer "stationary" "~/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/" dired-mode)
(def-buffer "include<stationary>" "~/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/" dired-mode)
(def-buffer "filters<src>" "~/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/" dired-mode)
(def-buffer "src<soundservice>" "~/workspace/hgrm/master/hagoromo/services/soundservice/src/" dired-mode)
(def-buffer "include<src>" "~/workspace/hgrm/master/hagoromo/services/soundservice/src/include/" dired-mode)
(def-buffer "include<filters>" "~/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/include/" dired-mode)
(def-buffer "F2i.h<filters>" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/include/F2i.h" c++-mode)
(def-buffer "F2i.h<stationary>" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/F2i.h" c++-mode)
(def-buffer "ChCombiner.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/ChCombiner.h" c-mode)
(def-buffer "AutoWah.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/AutoWah.h" c-mode)
(def-buffer "AavMaxMc.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/AavMaxMc.h" c-mode)
(def-buffer "AavMax.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/AavMax.h" c-mode)
(def-buffer "AVO.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/AVO.h" c-mode)
(def-buffer "AECVA.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/AECVA.h" c-mode)
(def-buffer "AEC.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/include/AEC.h" c-mode)
(def-buffer "soundservice" "~/workspace/hgrm/master/hagoromo/services/soundservice/" dired-mode)
(def-buffer "F2i.cc<stationary>" "/home/waka/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/F2i/F2i.cc" c++-mode)
(def-buffer "tools<stationary>" "~/workspace/hgrm/master/hagoromo/services/soundservice/src/filters/stationary/tools/" dired-mode)
(def-buffer "hagoromo" "~/workspace/hgrm/master/hagoromo/" dired-mode)
(def-buffer "master" "~/workspace/hgrm/master/" dired-mode)
(def-buffer "hgrm" "~/workspace/hgrm/" dired-mode)
(def-buffer "workspace" "~/workspace/" dired-mode)
(def-buffer "archives" "~/.emacs.d/elpa/archives/" dired-mode))
(def-wconf
(((min-height . 4)
(min-width . 10)
(min-height-ignore . 3)
(min-width-ignore . 4)
(min-height-safe . 1)
(min-width-safe . 2)
(min-pixel-height . 64)
(min-pixel-width . 80)
(min-pixel-height-ignore . 48)
(min-pixel-width-ignore . 32)
(min-pixel-height-safe . 16)
(min-pixel-width-safe . 16))
leaf
(pixel-width . 1916)
(pixel-height . 1060)
(total-width . 240)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 1.0)
(buffer "*init log*"
(selected . t)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 nil nil)
(vscroll . 0)
(dedicated)
(point . 55)
(start . 1))))
(def-params nil)
t nil nil)
(def-persp "sony"
((def-buffer "SoundServiceProfileSoundFlow.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/profile/include/SoundServiceProfileSoundFlow.h" c-mode)
(def-buffer "FilterChainMgr-priv.h" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filterchainmgr/include/FilterChainMgr-priv.h" c-mode)
(def-buffer "FilterInfo.cc" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filterchainmgr/FilterInfo.cc" c++-mode)
(def-buffer "FilterChainSetting.cc" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filterchainmgr/FilterChainSetting.cc" c++-mode)
(def-buffer "DebugCapture.cc" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/DebugCapture/DebugCapture.cc" c++-mode)
(def-buffer "make_effector.sh<filters>" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/tools/make_effector.sh" sh-mode)
(def-buffer "ChNumAdjust.cc" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/ChNumAdjust/ChNumAdjust.cc" c++-mode)
(def-buffer "effector.csv" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/tools/effector.csv" csv-mode)
(def-buffer "FilterFactory.cc" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline/filters/FilterFactory.cc" c++-mode)
(def-buffer "pipeline.mk" "/home/waka/workspace/hgrm/master/hagoromo/services/soundpostcontrolservice/src/pipeline.mk" makefile-gmake-mode))
(def-wconf
(((min-height . 8)
(min-width . 20)
(min-height-ignore . 5)
(min-width-ignore . 8)
(min-height-safe . 2)
(min-width-safe . 4)
(min-pixel-height . 128)
(min-pixel-width . 160)
(min-pixel-height-ignore . 80)
(min-pixel-width-ignore . 64)
(min-pixel-height-safe . 32)
(min-pixel-width-safe . 32))
hc
(pixel-width . 1916)
(pixel-height . 1060)
(total-width . 240)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 1.0)
(combination-limit)
(vc
(pixel-width . 956)
(pixel-height . 1060)
(total-width . 120)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 0.4989561586638831)
(combination-limit)
(leaf
(pixel-width . 956)
(pixel-height . 528)
(total-width . 120)
(total-height . 33)
(normal-height . 0.4981132075471698)
(normal-width . 1.0)
(buffer "SoundServiceProfileSoundFlow.h"
(selected)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 t nil)
(vscroll . 0)
(dedicated)
(point . 1)
(start . 1)))
(leaf
(last . t)
(pixel-width . 956)
(pixel-height . 532)
(total-width . 120)
(total-height . 33)
(normal-height . 0.5018867924528302)
(normal-width . 1.0)
(buffer "FilterInfo.cc"
(selected . t)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 t nil)
(vscroll . 0)
(dedicated)
(point . 3133)
(start . 2677))))
(leaf
(last . t)
(pixel-width . 960)
(pixel-height . 1060)
(total-width . 120)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 0.5010438413361169)
(buffer "FilterChainSetting.cc"
(selected)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 t nil)
(vscroll . 0)
(dedicated)
(point . 1177)
(start . 1)))))
(def-params nil)
nil nil nil)
(def-persp "howm"
((def-buffer "2019-10-25-171922.txt" "/home/waka/howm.git/2019/10/2019-10-25-171922.txt" text-mode)
(def-buffer "howm-view.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm-view.el" emacs-lisp-mode)
(def-buffer "howm.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm.el" emacs-lisp-mode)
(def-buffer "howm-mode.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm-mode.el" emacs-lisp-mode)
(def-buffer "howm-common.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm-common.el" emacs-lisp-mode)
(def-buffer "2016-11-01-000000.txt" "/home/waka/howm.git/2016/11/2016-11-01-000000.txt" text-mode)
(def-buffer "howm-version.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/howm-version.el" emacs-lisp-mode)
(def-buffer "action-lock.el" "/home/waka/dotfiles/emacs.d/elpa/howm-20171225.652/action-lock.el" emacs-lisp-mode)
(def-buffer "2007-02-25-101635.howm" "/home/waka/howm.git/2007/02/2007-02-25-101635.howm" text-mode))
(def-wconf
(((min-height . 4)
(min-width . 20)
(min-height-ignore . 4)
(min-width-ignore . 8)
(min-height-safe . 1)
(min-width-safe . 4)
(min-pixel-height . 64)
(min-pixel-width . 160)
(min-pixel-height-ignore . 64)
(min-pixel-width-ignore . 64)
(min-pixel-height-safe . 16)
(min-pixel-width-safe . 32))
hc
(pixel-width . 1916)
(pixel-height . 1060)
(total-width . 240)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 1.0)
(combination-limit)
(leaf
(pixel-width . 956)
(pixel-height . 1060)
(total-width . 120)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 0.5)
(buffer "*Compile-Log*"
(selected . t)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 t nil)
(vscroll . 0)
(dedicated)
(point . 4196)
(start . 3977)))
(leaf
(last . t)
(pixel-width . 960)
(pixel-height . 1060)
(total-width . 120)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 0.5)
(buffer "*Packages*"
(selected)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 t nil)
(vscroll . 0)
(dedicated)
(point . 442455)
(start . 437734)))))
(def-params nil)
nil nil nil)
(def-persp "os" nil
(def-wconf
(((min-height . 8)
(min-width . 20)
(min-height-ignore . 6)
(min-width-ignore . 8)
(min-height-safe . 2)
(min-width-safe . 4)
(min-pixel-height . 128)
(min-pixel-width . 160)
(min-pixel-height-ignore . 96)
(min-pixel-width-ignore . 64)
(min-pixel-height-safe . 32)
(min-pixel-width-safe . 32))
hc
(pixel-width . 1916)
(pixel-height . 1060)
(total-width . 240)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 1.0)
(combination-limit)
(leaf
(pixel-width . 956)
(pixel-height . 1060)
(total-width . 120)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 0.5)
(buffer "study"
(selected)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 t nil)
(vscroll . 0)
(dedicated)
(point . 213)
(start . 1)))
(vc
(last . t)
(pixel-width . 960)
(pixel-height . 1060)
(total-width . 120)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 0.5)
(combination-limit)
(leaf
(pixel-width . 960)
(pixel-height . 532)
(total-width . 120)
(total-height . 33)
(normal-height . 0.5)
(normal-width . 1.0)
(buffer "make_effector.sh<filters>"
(selected . t)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 nil nil)
(vscroll . 0)
(dedicated)
(point . 27721)
(start . 27048)))
(leaf
(last . t)
(pixel-width . 960)
(pixel-height . 528)
(total-width . 120)
(total-height . 33)
(normal-height . 0.5)
(normal-width . 1.0)
(buffer "make_effector.sh<filters>"
(selected)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 nil nil)
(vscroll . 0)
(dedicated)
(point . 27721)
(start . 27322))))))
(def-params nil)
nil nil nil)
(def-persp "novel"
((def-buffer "127 耳川の戦い.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/127 耳川の戦い.yaml" fundamental-mode)
(def-buffer "126 戒め.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/126 戒め.yaml" fundamental-mode)
(def-buffer "125 権中納言.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/125 権中納言.yaml" fundamental-mode)
(def-buffer "124 九州へ.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/124 九州へ.yaml" fundamental-mode)
(def-buffer "123 和睦交渉（２）.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/123 和睦交渉（２）.yaml" fundamental-mode)
(def-buffer "122 和睦交渉（１）.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/122 和睦交渉（１）.yaml" fundamental-mode)
(def-buffer "121 高松城水攻め.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/121 高松城水攻め.yaml" fundamental-mode)
(def-buffer "120 変わった初陣.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/120 変わった初陣.yaml" fundamental-mode)
(def-buffer "107 父の背中.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/107 父の背中.yaml" fundamental-mode)
(def-buffer "70 恩賞.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/70 恩賞.yaml" fundamental-mode)
(def-buffer "69 第二次山科の戦い.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/69 第二次山科の戦い.yaml" fundamental-mode)
(def-buffer "68 不仁不義の悪人.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/68 不仁不義の悪人.yaml" fundamental-mode)
(def-buffer "67 不本意.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/67 不本意.yaml" fundamental-mode)
(def-buffer "[まきしま鈴木] 日本へようこそエルフさん。.txt" "/home/waka/contents/narou/小説データ/小説家になろう/n9354du 日本へようこそエルフさん。/[まきしま鈴木] 日本へようこそエルフさん。.txt" text-mode)
(def-buffer "66 謀神.yaml" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/本文/66 謀神.yaml" fundamental-mode)
(def-buffer "[イスラーフィール] 淡海乃海　水面が揺れる時.txt" "/home/waka/contents/narou/小説データ/小説家になろう/n9975de 淡海乃海　水面が揺れる時/[イスラーフィール] 淡海乃海　水面が揺れる時.txt" text-mode))
(def-wconf
(((min-height . 4)
(min-width . 20)
(min-height-ignore . 3)
(min-width-ignore . 8)
(min-height-safe . 1)
(min-width-safe . 4)
(min-pixel-height . 64)
(min-pixel-width . 160)
(min-pixel-height-ignore . 48)
(min-pixel-width-ignore . 64)
(min-pixel-height-safe . 16)
(min-pixel-width-safe . 32))
hc
(pixel-width . 1916)
(pixel-height . 1060)
(total-width . 240)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 1.0)
(combination-limit)
(leaf
(pixel-width . 956)
(pixel-height . 1060)
(total-width . 120)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 0.4989561586638831)
(buffer "127 耳川の戦い.yaml"
(selected . t)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 t nil)
(vscroll . 0)
(dedicated)
(point . 772)
(start . 1)))
(leaf
(last . t)
(pixel-width . 960)
(pixel-height . 1060)
(total-width . 120)
(total-height . 66)
(normal-height . 1.0)
(normal-width . 0.5010438413361169)
(buffer "[まきしま鈴木] 日本へようこそエルフさん。.txt"
(selected)
(hscroll . 0)
(fringes 8 8 nil)
(margins nil)
(scroll-bars 0 0 nil nil)
(vscroll . 0)
(dedicated)
(point . 1504)
(start . 647)))))
(def-params nil)
nil nil nil))
