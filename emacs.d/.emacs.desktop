;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Wed Jun 19 14:14:30 2019
;; Desktop file format version 208
;; Emacs version 26.2

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23817 50358 114029 771000) (desktop . "208") "waka@ruri" nil nil ((((minibuffer . t) (undecorated) (override-redirect) (font-backend xft x) (font . "-CYRE-Inconsolata-normal-normal-normal-*-21-*-*-*-m-0-iso10646-1") (font-parameter . "Inconsolata-11") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#e1e1e0") (background-color . "#2d3743") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen) (visibility . icon) (skip-taskbar) (z-group) (display-type . color) (background-mode . dark) (cursor-color . "#415160") (environment) (frame-cursor-color . "#415160") (frame-foreground-color . "#e1e1e0") (frame-background-color . "#2d3743") (frameset--id . "CB5C-857D-F5ED-549B") (frameset--mini t . t) (modeline . t) (unsplittable) (icon-name) (display . ":0") (explicit-name) (frameset--text-pixel-width . 2538) (frameset--text-pixel-height . 1434) (height . 62) (width . 230)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 92) (min-pixel-width . 110) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 44) (min-pixel-height-safe . 23) (min-pixel-width-safe . 22)) leaf (pixel-width . 2554) (pixel-height . 1411) (total-width . 232) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "2019-06-19-000000.txt" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 276) (start . 276))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("a.bin" "Makefile" "day21"))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/works/study/osaskbook/"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/home/waka/howm.git/2019/06/2019-06-19-000000.txt"
  "2019-06-19-000000.txt"
  'text-mode
  '(action-lock-mode howm-mode)
  276
  '(276 nil)
  nil
  nil
  '((buffer-display-time 23817 34251 606938 687000) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (33 3836 3836 33 1))))

(desktop-create-buffer 208
  "/home/waka/works/study/osaskbook/day21/harib18b/Makefile"
  "Makefile"
  'makefile-gmake-mode
  nil
  3060
  '(1 nil)
  nil
  nil
  '((indent-tabs-mode . t) (buffer-display-time 23817 33903 535243 464000) (buffer-file-coding-system . undecided-unix))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "harib18b"
  'dired-mode
  nil
  200
  '(246 nil)
  t
  '("/home/waka/works/study/osaskbook/day21/harib18b/")
  '((buffer-display-time 23817 33807 547557 76000))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "day21"
  'dired-mode
  nil
  282
  '(nil nil)
  t
  '("/home/waka/works/study/osaskbook/day21/")
  '((buffer-display-time 23817 33806 131887 848000))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "osaskbook"
  'dired-mode
  nil
  1595
  '(227 nil)
  t
  '("/home/waka/works/study/osaskbook/")
  '((buffer-display-time 23817 33912 480750 524000))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/home/waka/.howm-keys"
  " *howm-keys:*"
  'fundamental-mode
  nil
  1
  '(nil nil)
  nil
  nil
  '((buffer-display-time) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring nil)))

